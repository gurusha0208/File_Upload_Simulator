{"ast":null,"code":"var _jsxFileName = \"/Users/gurusajinithillainathan/Documents/Source/Bundle/file-app/File_Upload_Simulator/src/context/TaskContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { cancelTask as apiCancelTask } from '../api/taskApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext(undefined);\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const addTask = useCallback(task => {\n    setTasks(prevTasks => [...prevTasks, task]);\n  }, []);\n  const updateTask = useCallback((taskId, updates) => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      ...updates\n    } : task));\n  }, []);\n  const cancelTask = useCallback(taskId => {\n    // Call API to cancel the task\n    apiCancelTask(taskId);\n\n    // Update local state\n    updateTask(taskId, {\n      status: 'cancelled',\n      message: 'Task cancelled by user',\n      completedAt: new Date()\n    });\n  }, [updateTask]);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      updateTask,\n      cancelTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"lyQTFVO/OYBEOY2HDauUz5r0eV0=\");\n_c = TaskProvider;\nexport const useTaskContext = () => {\n  _s2();\n  const context = useContext(TaskContext);\n  if (context === undefined) {\n    throw new Error('useTaskContext must be used within a TaskProvider');\n  }\n  return context;\n};\n_s2(useTaskContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","cancelTask","apiCancelTask","jsxDEV","_jsxDEV","TaskContext","undefined","TaskProvider","children","_s","tasks","setTasks","addTask","task","prevTasks","updateTask","taskId","updates","map","id","status","message","completedAt","Date","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTaskContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/gurusajinithillainathan/Documents/Source/Bundle/file-app/File_Upload_Simulator/src/context/TaskContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport { Task } from '../types';\nimport { cancelTask as apiCancelTask } from '../api/taskApi';\n\ninterface TaskContextType {\n  tasks: Task[];\n  addTask: (task: Task) => void;\n  updateTask: (taskId: string, updates: Partial<Task>) => void;\n  cancelTask: (taskId: string) => void;\n}\n\nconst TaskContext = createContext<TaskContextType | undefined>(undefined);\n\nexport const TaskProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  \n  const addTask = useCallback((task: Task) => {\n    setTasks((prevTasks) => [...prevTasks, task]);\n  }, []);\n  \n  const updateTask = useCallback((taskId: string, updates: Partial<Task>) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, ...updates } : task\n      )\n    );\n  }, []);\n  \n  const cancelTask = useCallback((taskId: string) => {\n    // Call API to cancel the task\n    apiCancelTask(taskId);\n    \n    // Update local state\n    updateTask(taskId, { \n      status: 'cancelled', \n      message: 'Task cancelled by user',\n      completedAt: new Date()\n    });\n  }, [updateTask]);\n\n  return (\n    <TaskContext.Provider value={{ tasks, addTask, updateTask, cancelTask }}>\n      {children}\n    </TaskContext.Provider>\n  );\n};\n\nexport const useTaskContext = () => {\n  const context = useContext(TaskContext);\n  if (context === undefined) {\n    throw new Error('useTaskContext must be used within a TaskProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE/E,SAASC,UAAU,IAAIC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS7D,MAAMC,WAAW,gBAAGR,aAAa,CAA8BS,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMa,OAAO,GAAGZ,WAAW,CAAEa,IAAU,IAAK;IAC1CF,QAAQ,CAAEG,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAGf,WAAW,CAAC,CAACgB,MAAc,EAAEC,OAAsB,KAAK;IACzEN,QAAQ,CAAEG,SAAS,IACjBA,SAAS,CAACI,GAAG,CAAEL,IAAI,IACjBA,IAAI,CAACM,EAAE,KAAKH,MAAM,GAAG;MAAE,GAAGH,IAAI;MAAE,GAAGI;IAAQ,CAAC,GAAGJ,IACjD,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMZ,UAAU,GAAGD,WAAW,CAAEgB,MAAc,IAAK;IACjD;IACAd,aAAa,CAACc,MAAM,CAAC;;IAErB;IACAD,UAAU,CAACC,MAAM,EAAE;MACjBI,MAAM,EAAE,WAAW;MACnBC,OAAO,EAAE,wBAAwB;MACjCC,WAAW,EAAE,IAAIC,IAAI,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,oBACEX,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEf,KAAK;MAAEE,OAAO;MAAEG,UAAU;MAAEd;IAAW,CAAE;IAAAO,QAAA,EACrEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CAhCWF,YAAqD;AAAAuB,EAAA,GAArDvB,YAAqD;AAkClE,OAAO,MAAMwB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAMC,OAAO,GAAGnC,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI4B,OAAO,KAAK3B,SAAS,EAAE;IACzB,MAAM,IAAI4B,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,cAAc;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}